name: Docker Deploy via SSM

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set Instance ID from Branch
        id: set-instance
        run: |
          BRANCH=$(echo "${{ github.ref }}" | awk -F'/' '{print $3}')
          if [[ "$BRANCH" == "main" ]]; then
            echo "INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID_MAIN }}" >> $GITHUB_ENV
          elif [[ "$BRANCH" == "dev" ]]; then
            echo "INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID_DEV }}" >> $GITHUB_ENV
          fi
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Deploy via SSM (Docker)
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --parameters '{"commands":["export HOME=/home/ssm-user && sudo -u ssm-user bash /home/ssm-user/scripts/deploy-docker.sh $BRANCH"]}' \
            --comment "Docker Deployment for $BRANCH" \
            --query "Command.CommandId" \
            --output text)

          echo "Command ID: $COMMAND_ID"

          for i in {1..30}; do
            STATUS=$(aws ssm list-command-invocations \
              --command-id "$COMMAND_ID" \
              --details \
              --query "CommandInvocations[].Status" \
              --output text)
            if [[ "$STATUS" == "Success" || "$STATUS" == "Failed" || "$STATUS" == "Cancelled" ]]; then
              break
            fi
            sleep 5
          done

          OUTPUT=$(aws ssm list-command-invocations \
            --command-id "$COMMAND_ID" \
            --details \
            --query "CommandInvocations[].CommandPlugins[].Output" \
            --output text)

          echo "SSM Command Output: $OUTPUT"

          if [ "$STATUS" != "Success" ]; then
            echo "Deployment failed with status: $STATUS"
            exit 1
          fi

          echo "âœ… Docker-based deployment succeeded for $BRANCH"
